NAME-AARYAN SINHAN 
ROLL-20051796
SUBJECT- DSA
SECTION- B26 SLOT 2
BRANCH-CSE

QUESTION 1
// Write a C code of O(n) order to remove all the odd numbers from the array.
//  Example: the array contains 10, 2, 3, 7, 8, 6, 11. The output should be 10, 2, 8, and 6.

#include<stdio.h>

void removeOddNum(int arr[], int n){
    for (int i=0 ; i<n ; i++){
        if (arr[i] % 2 == 0){
            printf("%d " , arr[i]);
        }
    }
}

int main(){
   int n;
   printf("Enter the size of the array : ");
   scanf("%d", &n);
   int arr[n];
   for (int i=0 ; i<n ; i++){
       scanf("%d", &arr[i]);
   }

   removeOddNum(arr, n);
   return 0;
}



QUESTION 2 :
// Write a C code to add two polynomials having two numbers of unknown variables.


#include<stdio.h>
#include<conio.h>
void main()
{ int a[10],b[10],c[10],i,m,n,cnt=0;
clrscr();
for(i=0;i<=9;i++)
a[i]=0;
for(i=0;i<=9;i++)
b[i]=0;
printf("\nEnter the variables of first Polynomial");
scanf("%c%c",&m,&n);
printf("\nEnter the Co-efficient");
for(i=m;i>=0;i--)
{
scanf("%d",&a[i]);
}
printf("\nEnter the variables of Second Polynomail");
scanf("%c%c",m,n);
printf("\nEnter the Co-efficient");
for(i=n;i>=0;i--)
{
scanf("%d",&b[i]);
}
if(m>=n)
{
for(i=m;i>=0;i--)
{
c[i]=a[i]+b[i];
cnt++;
}
}
else
{
for(i=n;i>=0;i--)
{
c[i]=a[i]+b[i];
}
}
printf("\n\nRESULTANT POLYNOMIAL IS :A:=");
for(i=cnt-1;i>0;i--)
{
printf("%dX^%d+",c[i],i);
}
printf("%d",c[i]);
getch();
}





QUESTION 3 :

// Write a C code to delete all prime numbers present in a doubly linked list.
// For example, if input: 5->6->11->4->12->16, then output 6->4->12->16.


#include<stdio.h>
#include<stdlib.h>
#include<math.h>

struct node{
    int info;
    struct node *prev;
    struct node *next;
} *start;

void createList(int data){
    struct node *temp, *q;
    temp = (struct node*)malloc(sizeof(struct node));
    temp->info = data;
    temp->next = NULL;
    if (start == NULL){
        temp->prev = NULL;
        start = temp;
    }
    else {
        q = start;
        while (q->next != NULL){
            q = q->next;
        }
        q->next = temp;
        temp->prev = q;
    }
}

void displayList(){
    struct node *q = start;
    if (start == NULL){
        printf("List is empty!\n");
        return;
    }
    while (q != NULL){
        printf("%d->", q->info);
        q = q->next;
    }
    printf("NULL\n");
}

int isPrime(int n){
    if (n == 1)
      return 0;
    for (int i=2 ; i<=sqrt(n) ; i++){
        if (n%i == 0){
            return 0;
        }
    }
    return 1; 
}

void deletePrime(){
    struct node *temp, *q;
    if (isPrime(start->info)){
        temp = start;
        start = start->next;
        start->prev = NULL;
        free(temp);
        return;
    }
    q = start;
    while (q->next->next != NULL){
        if (isPrime(q->next->info)){
            temp = q->next;
            q->next = temp->next;
            temp->next->prev = q;
            free(temp);
        }
        q = q->next;
    }
    //last node
    if (isPrime(q->next->info)){
        temp = q->next;
        free(temp);
        q->next = NULL;
        return;
    }
}

int main(){
    int choice;
    int data, n;
    while(1){
        printf("Enter choice : ");
        scanf("%d", &choice);
        switch (choice)
        {
        case 1:
            printf("Enter the number of nodes : ");
            scanf("%d", &n);
            for (int i=0 ; i<n ; i++){
                printf("Enter the %d node : ", i+1);
                scanf("%d", &data);
                createList(data);
            }
            break;
        case 2:
            deletePrime();
            break;
        case 3:
            displayList();
            break;
        case 4:
            exit(1);            
        
        default:
            break;
        }
    }
    return 0;
}



QUESTION 4:


// Two arrays are given. Write the C code to swap elements from each array such that after swapping, 
// sum of elements of array1=sum of elements of array2..
// Example:
// Array 1: 3, 2, 10, 12
// Array 2: 6, 4, 9, 10
// After swapping 3 (from Array 1) with 4 (from Array 2)
// Array1: 4, 2, 10, 12 Sum = 28
// Array2: 6, 3, 9, 10 Sum = 28

#include<stdio.h>

int arrSum(int arr[], int s){
    int sum = 0;
    for (int i=0 ; i<s ; i++){
        sum += arr[i];
    }
    return sum;
}

//a-b = (sum1-sum2)/2
int f1(int arr1[], int n, int arr2[], int m){
    int sum1 = arrSum(arr1, n);
    int sum2 = arrSum(arr2, m);
    if ((sum1 - sum2) % 2 != 0){
        return 0;
    }
    return ((sum1 - sum2)/2);
}

void findSwapNum(int arr1[], int n, int arr2[], int m){
    int t = f1(arr1, n, arr2, m);
    if (t == 0){
        return;
    }
    int a , b;
    for (int i=0 ; i<n ; i++){
        for (int j=0 ; j<m ; j++){
            if (arr1[i] - arr2[j] == t){
                a = arr1[i];
                b = arr2[j];
            }
        }
    }
    printf("%d %d", a,b);
}

int main(){
    int n, m;
    printf("Enter the size of the 1st array : ");
    scanf("%d", &n);
    int arr1[n];
    printf ("Enter the elements in array 1 : ");
    for (int i=0 ; i<n ; i++){
        scanf("%d", &arr1[i]);
    }

    printf("Enter the size of the 2nd array : ");
    scanf("%d", &m);
    int arr2[m];
    printf ("Enter the elements in array 2 : ");
    for (int i=0 ; i<m ; i++){
        scanf("%d", &arr2[i]);
    }


    printf("Swaped numbers are : ");
    findSwapNum(arr1, n, arr2, m);
    printf("\n");
    return 0;
}